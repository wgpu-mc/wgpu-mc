# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on:
  pull_request:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        java: [
          17 # Minimum supported by Minecraft
        ]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v2
        
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: setup gradle
        uses: gradle/actions/setup-gradle@v3

      - name: build
        run: ./gradlew build

      - name: capture build artifacts
      # Only upload artifacts built by ubuntu on LTS java
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }}
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: fabric/build/libs/
          if-no-files-found: error
